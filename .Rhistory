# head(anno)
```
```{r}
accidentalidad$FECHA_ACCIDENTE=substr(accidentalidad$FECHA_ACCIDENTE,1,10)
```
```{r}
# Evaluar si el dia de la semana es habil o no
es_dia_laboral = ifelse(dia_semana %in% c("sábado","domingo"),"No laboral","Laboral")
# head(es_dia_laboral)
# La funcion imprime n vectores posicion a posicion
# head(cbind(dia_semana,es_dia_laboral))
```
```{r}
# Genera una tabla con los
FECHAS<-data.frame(fechas,es_dia_laboral,dia_semana,dia_mes,mes,anno)
# head(FECHAS)
```
```{r}
# Funcion de agrupación
solo_dias_laborales=subset(FECHAS,subset=(es_dia_laboral=="Laboral"))
ultimos_dias_laborales=aggregate(dia_mes~anno*mes,data=solo_dias_laborales,FUN=max)
```
```{r}
# Ciclo for...para comparar dos matrices
n=length(fechas)
m=dim(ultimos_dias_laborales)[1]
es_ultimo_dia_habil=rep(0,n)
for (i in 1:n) {
for (j in 1:m) {
if (FECHAS$dia_mes[i]==ultimos_dias_laborales$dia_mes[j] &
FECHAS$mes[i] == ultimos_dias_laborales$mes[j] &
FECHAS$anno[i]==ultimos_dias_laborales$anno[j]){
es_ultimo_dia_habil[i]=1
}
}
}
# head(es_ultimo_dia_habil)
```
```{r}
FECHAS$es_ultimo_dia_habil=es_ultimo_dia_habil
accidentalidad$f_accidente=as.Date(accidentalidad$FECHA_ACCIDENTE)
accidentalidad_enriquecida=merge(accidentalidad,FECHAS,by.x = "f_accidente",by.y = "fechas" )
# Para hacer el simil con los JOINs, se usa un argumento mas 'all.x=TRUE' para # mostrar el left join de SQL
```
# Mostrar: Ultimo dia habil vs Dia normal
# por tipo de accidente
```{r}
XX=subset(accidentalidad_enriquecida,subset=(es_dia_laboral=="Laboral"))
conteo_accidente_dia=aggregate(Id~es_ultimo_dia_habil*dia_semana*CLASE_ACCIDENTE, data=XX, FUN = length)
conteo_accidente_dia$cc=paste(conteo_accidente_dia$es_ultimo_dia_habil,conteo_accidente_dia$dia_semana,sep="")
```
```{r}
conteo_dias<-aggregate(fechas~es_ultimo_dia_habil+dia_semana,data=FECHAS,FUN=length)
conteo_dias$cc<-paste(conteo_dias$es_ultimo_dia_habil,conteo_dias$dia_semana,sep="")
conteo_acci_y_dias<-merge(conteo_accidente_dia,conteo_dias,by="cc",all.x = TRUE)
conteo_acci_y_dias<-subset(conteo_acci_y_dias,select = c("CLASE_ACCIDENTE","dia_semana.x","es_ultimo_dia_habil.x","Id","fechas"))
names(conteo_acci_y_dias)<-c("Tipo","Dia","Diahabil","CantAcc","Cantdias")
conteo_acci_y_dias$accprom<-conteo_acci_y_dias$CantAcc/conteo_acci_y_dias$Cantdias
```
```{r}
choques_jueves<-subset(conteo_acci_y_dias,subset = (Tipo=="Choque" & Dia=="jueves"),select = c("Diahabil","accprom"))
```
```{r}
dias<-unique(conteo_acci_y_dias$Dia)
x<-subset(conteo_acci_y_dias,subset = (Tipo=="Choque" & Dia==c("lunes","martes","miércoles","jueves","viernes")),select = c("Diahabil","accprom","Dia"))
par(mfrow=c(1,5))
for (i in c("lunes","martes","miércoles","jueves","viernes")){
x<-subset(conteo_acci_y_dias,subset = (Tipo=="Choque" & Dia==i),select = c("Diahabil","accprom","Dia"))
barplot(x$accprom,names=c("otro","udhm"),xlab=i,col=c("blue","orange"), border=FALSE,ylab="Cantidad de Accidentes", ylim=c(0,25))
}
```
```{r}
library(plotly)
library(ggplot2)
dias<-unique(conteo_acci_y_dias$Dia)
xData<-subset(conteo_acci_y_dias,subset = (Tipo=="Choque" & Dia %in% c("lunes","martes","miércoles","jueves","viernes")),select = c("Diahabil","accprom","Dia"))
xData$Dia<-as.factor(xData$Dia)
xData$Diahabil<-as.factor(xData$Diahabil)
xData$Diahabil<-ifelse(xData$Diahabil==0,"OTRO","UDHM")
xData$DiaSem=ifelse(xData$Dia=="lunes",1,
ifelse(xData$Dia=="martes",2,
ifelse(xData$Dia=="miércoles",3,
ifelse(xData$Dia=="jueves",4,
ifelse(xData$Dia=="viernes", 5, 0)
)
)
)
)
p <-ggplot(xData, aes(x=reorder(Dia,DiaSem), y=accprom,fill=Diahabil))+ ggtitle("Comparativo accidentes")+ xlab("Dias Semana") + ylab("Accidentes promedio")
p + geom_bar(stat = "identity",  position = 'dodge')
```
```{r}
conteo_dias<-aggregate(fechas~es_ultimo_dia_habil+dia_semana,data=FECHAS,FUN=length)
conteo_dias$cc<-paste(conteo_dias$es_ultimo_dia_habil,conteo_dias$dia_semana,sep="")
```
```{r}
conteo_acci_y_dias<-merge(conteo_accidente_dia,conteo_dias,by="cc",all.x = TRUE)
```
```{r}
conteo_acci_y_dias<-merge(conteo_accidente_dia,conteo_dias,by="cc",all.x = TRUE)
```
```{r}
conteo_acci_y_dias<-subset(conteo_acci_y_dias,select = c("CLASE_ACCIDENTE","dia_semana.x","es_ultimo_dia_habil.x","Id","fechas"))
```
```{r}
names(conteo_acci_y_dias)<-c("Tipo","Dia","Diahabil","CantAcc","Cantdias")
```
```{r}
conteo_acci_y_dias$accprom<-conteo_acci_y_dias$CantAcc/conteo_acci_y_dias$Cantdias
```
```{r}
choques_jueves<-subset(conteo_acci_y_dias,subset = (Tipo=="Choque" & Dia=="jueves"),select = c("Diahabil","accprom"))
```
```{r}
barplot(choques_jueves$accprom,names=choques_jueves$Diahabil)
```
```{r}
dias<-unique(conteo_acci_y_dias$Dia)
x<-subset(conteo_acci_y_dias,subset = (Tipo=="Choque" & Dia==dias[1]),select = c("Diahabil","accprom"))
par(mfrow=c(1,5))
barplot(x$accprom,names=x$Diahabil)
for (i in dias[-1]){
x<-subset(conteo_acci_y_dias,subset = (Tipo=="Choque" & Dia==i),select = c("Diahabil","accprom"))
barplot(x$accprom,names=x$Diahabil)
}
```
### Leer el archivo dias festivos
```{r}
festivos<-read.csv("DIAS_FESTIVOS.csv", header=TRUE , sep = ";" , encoding='UTF-8')
```
```{r}
accidentalidad_enriquecida$es_dia_laboral=as.character(accidentalidad_enriquecida$es_dia_laboral)
accidentalidad_enriquecida$es_festivo=ifelse(accidentalidad_enriquecida$FECHA_ACCIDENTE %in% festivos$Dia_Festivo,"FESTIVO","NO FESTIVO")
accidentalidad_enriquecida$es_festivo=ifelse(accidentalidad_enriquecida$es_festivo =="FESTIVO" ,"No laboral",accidentalidad_enriquecida$es_dia_laboral)
```
View(accidentalidad_enriquecida)
data_barrios=subset(accidentalidad_enriquecida,select = c("Año","location","barrio"))
View(data_barrios)
coordenadas=data_barrios$location
coordenadas=as.character(coordenadas)
coordenadas=gsub("[","",coordenadas,fixed =TRUE)
coordenadas=gsub("]","",coordenadas,fixed =TRUE)
coordenadas=strsplit(coordenadas,split=",",fixed = TRUE)
coordenadas=unlist(coordenadas)
coordenadas=as.numeric(coordenadas)
latutid=coordenadas[seq(2,length(coordenadas),by=2)]
longitud=coordenadas[seq(1,length(coordenadas),by=2)]
data_barrios$latitud=latitud
data_barrios$latitud=latutid
View(data_barrios)
data_barrios$longitud=longitud
View(data_barrios)
names(data_barrios)<-c("anno","location","barrio","latitud","longitud")
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentalidad/accidentalidad')
write.csv(data_barrios,sep = ";")
write.csv(data_barrios,sep = " ", file="accidentes_barrios")
write.csv(data_barrios,sep = " ", file="accidentes_barrios.csv")
write.csv(data_barrios, file="accidentes_barrios.csv",sep = " ")
View(data_barrios)
write.csv(data_barrios, file="accidentes_barrios.csv",sep = " ",row.names = FALSE)
write.csv(data_barrios, file="accidentalidad_barrios.csv",sep = " ",row.names = FALSE)
write.csv(data_barrios, file="accidentalidad_barrios.csv",row.names = FALSE)
data_barrios<-read.csv("accidentes_barrios.csv",header = TRUE,sep=",")
data_barrios<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
View(data_barrios)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentalidad/accidentalidad')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentalidad/accidentalidad')
data_barrios<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
data_barrios<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
View(data_barrios)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentalidad/accidentalidad')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentalidad/accidentalidad')
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentalidad/accidentalidad')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentalidad/accidentalidad')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrios<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
runApp()
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
rsconnect::appDependencies()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrios<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrio<-(subset(data_barrio
,subset = (data_barrio$anno==input$lista_anios
& data_barrio$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud")))
data_barrio<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
data_barrio<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
data_barrio$barrio<-data_barrio$barrio
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrios<-subset(data_barrio
,subset = (data_barrio$anno==input$lista_anios
& data_barrio$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud"))
data_barrios<-subset(data_barrio
,subset = (data_barrio$anno==input$lista_anios
& data_barrio$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud"))
data_barrio<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
data_barrio$barrio<-data_barrio$barrio
output$dataframe<-renderDataTable({
data_barrios<-subset(data_barrio
,subset = (data_barrio$anno==input$lista_anios
& data_barrio$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud"))
})
output$grfMapa<-renderLeaflet({
lat_barrio= (subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrios==input$lista_barrios)
,select = c("latitud")))$latitud
long_barrio=(subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("longitud")))$longitud
lngA<-min(subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("longitud"))$longitud)
lngB<-max(subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("longitud"))$longitud)
latA<-min((subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("latitud")))$latitud)
latB=max((subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("latitud")))$latitud)
mapa<-leaflet()
mapa<-addProviderTiles(mapa,provider <- "OpenStreetMap.Mapnik")
mapa<-fitBounds(mapa,lng1=lngA,lng2=lngB,lat1=latA,lat2=latB)
mapa<-addAwesomeMarkers(mapa,lng=long_barrio,lat=lat_barrio)
mapa<-addMarkers(mapa,lat = lat_barrio,lng=long_barrio ,)
mapa
})
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrios<-subset(data_barrio
,subset = (data_barrio$anno==input$lista_anios
& data_barrio$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud"))
# Define UI for application that draws a histogram
ui = fluidPage(
# Application title
titlePanel("Accidentes por barrio y año"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
selectInput("lista_barrios","Listado de barrios",unique(data_barrio$barrio)),
selectInput("lista_anios","Año",unique(data_barrio$anno))
),
# Show a plot of the generated distribution
mainPanel(
leafletOutput("grfMapa"),
dataTableOutput("dataframe")
)
)
)
data_barrio<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
data_barrio$barrio<-data_barrio$barrio
output$dataframe<-renderDataTable({
data_barrios<-subset(data_barrio
,subset = (data_barrio$anno==input$lista_anios
& data_barrio$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud"))
})
output$grfMapa<-renderLeaflet({
lat_barrio= (subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrios==input$lista_barrios)
,select = c("latitud")))$latitud
long_barrio=(subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("longitud")))$longitud
lngA<-min(subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("longitud"))$longitud)
lngB<-max(subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("longitud"))$longitud)
latA<-min((subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("latitud")))$latitud)
latB=max((subset(data_barrios
, subset = (data_barrios$anno==input$lista_anios & data_barrios$barrio==input$lista_barrios)
,select = c("latitud")))$latitud)
mapa<-leaflet()
mapa<-addProviderTiles(mapa,provider <- "OpenStreetMap.Mapnik")
mapa<-fitBounds(mapa,lng1=lngA,lng2=lngB,lat1=latA,lat2=latB)
mapa<-addAwesomeMarkers(mapa,lng=long_barrio,lat=lat_barrio)
mapa<-addMarkers(mapa,lat = lat_barrio,lng=long_barrio ,)
mapa
})
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrio<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
View(ui)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrios=data_barrio
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
install.packages(c("DT", "leaflet.extras", "shinyBS", "shinydashboard", "treemap"))
install.packages(c("DT", "leaflet.extras", "shinyBS", "shinydashboard", "treemap"))
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/ICC_mapa_diagnostico_2018')
View(data_barrio)
View(data_barrios)
View(data_barrio)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/ICC_mapa_diagnostico_2018')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=",")
runApp()
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrios<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
file.exists("data_prueba.csv")
file.exists("\data_prueba.csv")
file.exists("/data_prueba.csv")
library(readr)
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(data_prueba)
library(readr)
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv",
";", escape_backslash = TRUE, locale = locale(decimal_mark = ","),
na = "null", trim_ws = TRUE)
View(data_prueba)
library(readr)
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv",
";", escape_backslash = TRUE, locale = locale(decimal_mark = ","),
na = "null", trim_ws = TRUE)
View(data_prueba)
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
# data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv",
+     ";", escape_backslash = TRUE, locale = locale(decimal_mark = ","),
+     na = "null", trim_ws = TRUE)
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv",
+     ";", escape_backslash = TRUE, locale = locale(decimal_mark = ","),
+     na = "null", trim_ws = TRUE)
# data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_prueba <- read_delim("data_prueba.csv", ";", escape_backslash = TRUE, locale = locale(decimal_mark = ","),
+     na = "null", trim_ws = TRUE)
# data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_prueba <- read_delim("data_prueba.csv", ";", escape_backslash = TRUE
, locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
# data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
, locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
data_prueba<-names(c("Latitud","Longitud"))
# data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
, locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
lat_barrio= data_prueba$Latitude
long_barrio= data_prueba$Longitude
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
, locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
data_prueba <- read.csv("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
, locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
data_prueba <- read.csv("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
, locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
library(readr)
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv",
";", escape_double = FALSE, locale = locale(grouping_mark = "."),
trim_ws = TRUE)
View(data_prueba)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
# data_prueba <- read.csv("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
#                           , locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=",")
# data_prueba <- read.csv("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
#                           , locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
lat_barrio= data_prueba$Latitude
long_barrio= data_prueba$Longitude
mapa<-leaflet()
mapa<-addProviderTiles(mapa,provider <- "OpenStreetMap.Mapnik")
mapa<-addMarkers(mapa,lat = lat_barrio,lng=long_barrio ,)
mapa
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
# data_prueba <- read.csv("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
#                           , locale = locale(decimal_mark = ","),na = "null", trim_ws = TRUE)
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
library(readr)
data_prueba <- read_delim("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv",
";", escape_double = FALSE, locale = locale(grouping_mark = "."),
trim_ws = TRUE)
View(data_prueba)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
View(data_prueba)
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
runApp()
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba')
head(lat_barrio)
lat_barrio= data_prueba$Latitude
head(lat_barrio)
long_barrio= data_prueba$Longitude
mapa<-leaflet()
mapa<-addProviderTiles(mapa,provider <- "OpenStreetMap.Mapnik")
mapa<-addMarkers(mapa,lat = lat_barrio,lng=long_barrio )
mapa
# data_prueba <- read.csv("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/prueba/data_prueba.csv", ";", escape_backslash = TRUE
#                           , locale = locale(decimal_mark = "."),na = "null", trim_ws = TRUE)
data_barrio<-read.csv("data_prueba.csv",header = TRUE,sep=";")
data_barrio<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrios<-subset(data_barrios
,subset = (data_barrio$anno==input$lista_anios
& data_barrio$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud"))
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
data_barrios<-subset(data_barrios
,subset = (data_barrios$anno==input$lista_anios
& data_barrios$barrio==input$lista_barrios)
,select = c("anno","barrio","latitud","longitud"))
data_barrios<-read.csv("accidentalidad_barrios.csv",header = TRUE,sep=",")
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/accidentes')
}
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/01 CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
getwd()
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
setwd("E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes")
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/01 CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
shiny::runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/01 CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/01 CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/01 CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
runApp('E:/ESTEBAN/DE LA U/02 ESPECIALIZACION/SEMESTRE 1/01 CIENCIA DE LOS DATOS/Shiny/trabajo_final/accidentes')
install.packages("shinydashboard")
install.packages("shinydashboard")
install.packages(c("ggalt", "qpcR", "shinyalert", "shinyBS", "shinyjs", "sqldf"))
shiny::runApp()
datos_accidentes<-readRDS(file="datos.rds", refhook = NULL)
datos_completos<-subset(datos_accidentes,subset = (datos_accidentes$PERIODO) %in% c(2014,2015,2016,2017,2018,2019))
View(datos_completos)
View(datos_accidentes)
fechas<-as.Date(datos_accidentes$FECHA)
View(datos_accidentes)
names datos_accidentes
names(datos_accidentes)
help(datos_accidentes)
head(datos_accidentes)
class(datos_accidentes)
typeof(datos_accidentes$FECHA)
opciones_comuna<-c("",sort(as.character(unique(datos_accidentes$COMUNA))),"TODAS")
opciones_comuna
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
